@using Microsoft.AspNet.Identity
@using DataModel.DataEntity;
@using DataModel.DataViewModel;
@model ProfileViewModel
@{
    ViewBag.Title = "Profile";
    Layout = "~/Areas/AdminCMS/Views/Shared/_Layout.cshtml";
}

<section class="content">
    <div class="row">
        <!-- left column -->
        <div class="col-md-12">
            <!-- general form elements -->
            <div class="box box-primary">
                <div class="box-header with-border">
                    <p>Bạn đang đăng nhập bằng tài khoản <strong>@User.Identity.GetUserName()</strong>.</p>

                </div><!-- /.box-header -->
                <!-- form start -->
                <div class="box-body">
                    <!-- /.box -->
                    @using (Html.BeginForm("Profile", "AccountAdmin", FormMethod.Post, new { enctype = "multipart/form-data", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary("", new { @class = "text-danger" })
                        @Html.HiddenFor(s => s.Id)

                        <div class="col-md-4">
                            <div class="form-group col-md-12">
                                <label for="exampleInputEmail1">Tên Đăng Nhập</label>
                                @*<input type="email" class="form-control" id="exampleInputEmail1" placeholder="Tên Đăng Nhập">*@
                                @Html.TextBoxFor(m => m.Login, new { @class = "form-control", placeholder = "Tên Đăng Nhập" })
                            </div>

                            <div class="form-group col-md-12">
                                <label for="exampleInputEmail1">Email address</label>
                                @Html.TextBoxFor(m => m.EMail, new { @class = "form-control", placeholder = "Enter email" })
                            </div>

                            <div class="form-group col-md-12">
                                <label for="exampleInputEmail1">Họ Và Tên </label>
                                @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", placeholder = "Họ Và Tên" })
                            </div>


                            <div class="form-group col-md-12">
                                <label>Ngày Sinh:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    <input type="text" class="form-control" data-inputmask="'alias': 'dd/mm/yyyy'" data-mask="">
                                </div><!-- /.input group -->
                            </div>
                            <div class="form-group col-md-12">
                                <label for="exampleInputEmail1">Số Điện Thoại</label>
                                @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", placeholder = "Số Điện Thoại" })
                            </div>

                          

                            <div class="form-group col-md-6">
                                @Html.LabelFor(m => m.GenderList, new { @class = "control-label" })
                                @Html.DropDownListFor(c => c.GenderId, Model.GenderList as SelectList, "Select...", new { @class = "form-control" })
                            </div>
                            <div class="form-group col-md-12">
                                <button type="submit" class="btn btn-primary">Cập Nhật</button>
                            </div>


                        </div><!-- /.box-body -->
                        <div class="col-md-4">

                            @*<div class="form-group col-md-12">
                                    @Html.LabelFor(m => m.CompanyList, new { @class = "control-label" })
                                    @Html.DropDownListFor(c => c.CompanyID, Model.CompanyList as SelectList, "Select...", new { @class = "form-control" })
                                </div>*@


                         

                            <div class="form-group col-md-12">
                                <label>Ngày Tham Gia:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    <input type="text" class="form-control" data-inputmask="'alias': 'dd/mm/yyyy'" data-mask="">
                                </div><!-- /.input group -->
                            </div>

                            <div class="form-group col-md-12">
                                <label>Ngày Được Duyệt:</label>
                                <div class="input-group">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    <input type="text" class="form-control" data-inputmask="'alias': 'dd/mm/yyyy'" data-mask="">
                                </div><!-- /.input group -->
                            </div>
                        </div><!-- /.box-body -->

                        <div class="col-md-4">

                            <div class="form-group">
                                <label for="exampleInputFile">Hình</label>
                                <input type="file" id="Imgfiles" name="Imgfiles" value="Chọn hình">

                            </div>
                            <div class="form-group">
                                <p class="help-block">Hình đại diện</p>
                            </div>
                            <div class="form-group imgboxdata">
                                <img class="img-responsive" src="~/@Model.ImgUrl" alt="User Image" id="blah">
                            </div>

                        </div><!-- /.box-body -->
                    }
                </div><!-- /.box -->
            </div><!-- /.box -->
            <!-- Form Element sizes -->

        </div><!--/.col (left) -->
    </div>   <!-- /.row -->
</section>

<script>
    $(function () {
        //Initialize Select2 Elements
        $(".select2").select2();

        //Datemask dd/mm/yyyy
        $("#datemask").inputmask("dd/mm/yyyy", { "placeholder": "dd/mm/yyyy" });
        //Datemask2 mm/dd/yyyy
        $("#datemask2").inputmask("mm/dd/yyyy", { "placeholder": "mm/dd/yyyy" });
        //Money Euro
        $("[data-mask]").inputmask();

        //Date range picker
        $('#reservation').daterangepicker();
        //Date range picker with time picker
        $('#reservationtime').daterangepicker({ timePicker: true, timePickerIncrement: 30, format: 'MM/DD/YYYY h:mm A' });
        //Date range as a button
        $('#daterange-btn').daterangepicker(
            {
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                },
                startDate: moment().subtract(29, 'days'),
                endDate: moment()
            },
        function (start, end) {
            $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
        }
        );

        //iCheck for checkbox and radio inputs
        $('input[type="checkbox"].minimal, input[type="radio"].minimal').iCheck({
            checkboxClass: 'icheckbox_minimal-blue',
            radioClass: 'iradio_minimal-blue'
        });
        //Red color scheme for iCheck
        $('input[type="checkbox"].minimal-red, input[type="radio"].minimal-red').iCheck({
            checkboxClass: 'icheckbox_minimal-red',
            radioClass: 'iradio_minimal-red'
        });
        //Flat red color scheme for iCheck
        $('input[type="checkbox"].flat-red, input[type="radio"].flat-red').iCheck({
            checkboxClass: 'icheckbox_flat-green',
            radioClass: 'iradio_flat-green'
        });

        //Colorpicker
        $(".my-colorpicker1").colorpicker();
        //color picker with addon
        $(".my-colorpicker2").colorpicker();

        //Timepicker
        $(".timepicker").timepicker({
            showInputs: false
        });
    });
</script>

<script>
    $(document).ready(function () {

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#blah').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }
        $("#Imgfiles").change(function () {
            readURL(this);
        });


    });

</script>